spring:
  profiles:
    active: production
---
spring:
  profiles: development
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    name: spring4fs
    url: jdbc:mysql://localhost:3306/database
    username: username
    password: password
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
        physical_naming_strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
naver:
  client:
    client-id: client-id
    client-secret: client-secret
    user-authorization-uri: https://nid.naver.com/oauth2.0/authorize
    access-token-uri: https://nid.naver.com/oauth2.0/token
    token-name: Authorization
    authentication-scheme: header
    client-authentication-scheme: query
  resource:
    user-info-uri: https://openapi.naver.com/v1/nid/me
logging:
  level:
    org.springframework.security: DEBUG
    web: DEBUG
---
spring:
  profiles: production
  devtools:
    add-properties: false
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    name: database
    url: jdbc:mysql://host//database
    username: username
    password: password
  jpa:
    open-in-view: false
    database: mysql
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
        physical_naming_strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: false
naver:
  client:
    client-id: client-id
    client-secret: client-secret
    user-authorization-uri: https://nid.naver.com/oauth2.0/authorize
    access-token-uri: https://nid.naver.com/oauth2.0/token
    token-name: Authorization
    authentication-scheme: header
    client-authentication-scheme: query
  resource:
    user-info-uri: https://openapi.naver.com/v1/nid/me
logging:
  level:
    org.springframework.security: INFO
    web: INFO